Index: src/scss/style.css
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.nav, .nav-cart, .nav-search, .nav-menu, .nav-text {\r\n  height: 50px;\r\n  display: flex;\r\n  border: none;\r\n  background: #e3e2eb;\r\n  box-shadow: 0 2px 2px -2px black;\r\n}\r\n.nav-text {\r\n  align-items: center;\r\n  font-family: \"Gamja Flower\", cursive;\r\n}\r\n.nav-menu {\r\n  flex: 2;\r\n  order: 1;\r\n}\r\n.nav-button, .nav-button:active, .nav-button:hover {\r\n  border: none;\r\n  outline-style: none;\r\n  background-color: #e3e2eb;\r\n  box-shadow: none;\r\n  margin: 0 5px 0 5px;\r\n}\r\n.nav-search {\r\n  order: 2;\r\n  width: 100%;\r\n  margin-left: 30px;\r\n  margin-right: 30px;\r\n  flex: 3;\r\n}\r\n.nav-search-bar, .nav-search-bar:focus {\r\n  display: flex;\r\n  flex: 1;\r\n  width: 100%;\r\n  margin: 7px;\r\n  padding: 10px;\r\n  background-color: #d8efee;\r\n  border: 2px solid #b4e0dd;\r\n  border-radius: 15px 0 0 15px;\r\n  box-shadow: 0 2px 2px -2px rgba(0, 0, 0, 0.2);\r\n}\r\n.nav-search-bar:focus {\r\n  outline: 0;\r\n  border: 2px solid #6CC2BD;\r\n}\r\n.nav-cart {\r\n  flex: 2;\r\n  order: 3;\r\n  justify-content: flex-end;\r\n  align-content: flex-end;\r\n}\r\n.nav-cart-amount {\r\n  height: 25px;\r\n  width: 25px;\r\n  background-color: rgba(108, 194, 189, 0.75);\r\n  border-radius: 50%;\r\n  padding: 5px;\r\n  position: absolute;\r\n  right: 0;\r\n  top: 0;\r\n}\r\n\r\n.navMenu {\r\n  background-color: white;\r\n  width: 100px;\r\n  height: 100px;\r\n  position: absolute;\r\n}\r\n\r\n* {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n  padding: 0;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\n/*# sourceMappingURL=style.css.map */\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/scss/style.css	(revision 824cb9df300013483bbefad11dcfe19e6da7f1dd)
+++ src/scss/style.css	(date 1605416042848)
@@ -61,8 +61,8 @@
 
 .navMenu {
   background-color: white;
-  width: 100px;
-  height: 100px;
+  width: 20vw;
+  height: 100vh;
   position: absolute;
 }
 
Index: debug.log
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[1113/000636.305:ERROR:directory_reader_win.cc(43)] FindFirstFile: The system cannot find the path specified. (0x3)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- debug.log	(revision 824cb9df300013483bbefad11dcfe19e6da7f1dd)
+++ debug.log	(date 1605416536392)
@@ -1,1 +1,2 @@
 [1113/000636.305:ERROR:directory_reader_win.cc(43)] FindFirstFile: The system cannot find the path specified. (0x3)
+[1115/000216.392:ERROR:directory_reader_win.cc(43)] FindFirstFile: The system cannot find the path specified. (0x3)
Index: .idea/jsLibraryMappings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/jsLibraryMappings.xml	(date 1605416728397)
+++ .idea/jsLibraryMappings.xml	(date 1605416728397)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="JavaScriptLibraryMappings">
+    <includedPredefinedLibrary name="Node.js Core" />
+  </component>
+</project>
\ No newline at end of file
Index: src/scss/_navbar.scss
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>@import \"config\";\r\n\r\n.nav {\r\n  height: 50px;\r\n  display: flex;\r\n  border: none;\r\n  background: $navbar-color;\r\n  box-shadow: 0 2px 2px -2px rgba(0,0,0,1);\r\n;\r\n\r\n  &-text {\r\n    @extend .nav;\r\n    align-items: center;\r\n    font-family: 'Gamja Flower', cursive; //TODO: Change this damn font\r\n  }\r\n\r\n  &-menu {\r\n    @extend .nav;\r\n    flex: 2;\r\n    order: 1;\r\n  }\r\n\r\n  &-button {\r\n    border: none;\r\n    outline-style: none;\r\n    background-color: $navbar-color;\r\n    box-shadow: none;\r\n    margin: 0 5px 0 5px;\r\n  }\r\n\r\n  &-button:hover {\r\n    @extend .nav-button;\r\n\r\n  }\r\n\r\n  &-button:active {\r\n    @extend .nav-button;\r\n\r\n  }\r\n\r\n  &-search {\r\n    @extend .nav;\r\n    order: 2;\r\n    width: 100%;\r\n    margin-left: 30px;\r\n    margin-right: 30px;\r\n    flex: 3;\r\n\r\n    &-bar {\r\n      display: flex;\r\n      flex: 1;\r\n      width: 100%;\r\n      margin: 7px;\r\n      padding: 10px;\r\n      background-color: $input-box-color;\r\n      border: 2px solid lighten($sunset-teal, 20);\r\n      border-radius: 15px 0 0 15px;\r\n      box-shadow: 0 2px 2px -2px rgba(0,0,0,0.2);\r\n\r\n    }\r\n\r\n    &-bar:focus {\r\n      @extend .nav-search-bar;\r\n      outline: 0;\r\n      border: 2px solid $sunset-teal;\r\n    }\r\n\r\n  }\r\n\r\n  &-cart {\r\n    @extend .nav;\r\n    flex: 2;\r\n    order: 3;\r\n    justify-content: flex-end;\r\n    align-content: flex-end;\r\n\r\n    &-amount {\r\n      height: 25px;\r\n      width: 25px;\r\n      background-color: transparentize($sunset-teal, 0.25);\r\n      border-radius: 50%;\r\n      padding: 5px;\r\n      position: absolute;\r\n      right: 0;\r\n      top: 0;\r\n    }\r\n  }\r\n}\r\n\r\n.navMenu {\r\n  background-color:  white;\r\n  width: 100px;\r\n  height: 100px;\r\n  position: absolute;\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/scss/_navbar.scss	(revision 824cb9df300013483bbefad11dcfe19e6da7f1dd)
+++ src/scss/_navbar.scss	(date 1605416042538)
@@ -89,8 +89,7 @@
 
 .navMenu {
   background-color:  white;
-  width: 100px;
-  height: 100px;
+  width: 20vw;
+  height: 100vh;
   position: absolute;
-
 }
\ No newline at end of file
Index: src/Components/NavMenu.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, { useState } from 'react';\r\nimport {ReactComponent as Menu} from \"../images/icons8-xbox-menu.svg\";\r\nimport {useTransition, animated} from 'react-spring'\r\n\r\nfunction NavMenu() {\r\n    const [isMenuOpen, setMenuOpen] = useState(false);\r\n\r\n    const menuTransitions = useTransition(isMenuOpen, null, {\r\n        from: { opacity: 0, transform: 'translateX(-100%)' },\r\n        enter: { opacity: 1, transform: 'translateX(0%)' },\r\n        leave: { opacity: 0, transform: 'translateX(-100%)' },\r\n    })\r\n\r\n    return (\r\n        <div className={\"nav-menu\"}>\r\n            {\r\n                menuTransitions.map(({ item, key, props }) =>\r\n                    item &&\r\n                    <animated.div\r\n                        key={key}\r\n                        style={props}\r\n                        className=\"fixed bg-white top-0 left-0 w-4/5 h-full z-50 shadow p-3\"\r\n                    >\r\n                        {/*<NavigationMenu*/}\r\n                        {/*    closeMenu={() => setShowMenu(false)}*/}\r\n                        {/*/>*/}\r\n                        <div className={\"navMenu\"}>\r\n                            World\r\n                        </div>\r\n\r\n                    </animated.div>\r\n                )\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            <button className={\"nav-button\"} type={\"button\"} onClick={()=>setMenuOpen(!isMenuOpen)}>\r\n                <Menu/>\r\n            </button>\r\n            <h1 className={\"nav-text\"}>\r\n                Petal Patch\r\n            </h1>\r\n\r\n        </div>\r\n    );\r\n}\r\nexport default NavMenu;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/Components/NavMenu.js	(revision 824cb9df300013483bbefad11dcfe19e6da7f1dd)
+++ src/Components/NavMenu.js	(date 1605450194124)
@@ -1,4 +1,4 @@
-import React, { useState } from 'react';
+import React, {useEffect, useRef, useState} from 'react';
 import {ReactComponent as Menu} from "../images/icons8-xbox-menu.svg";
 import {useTransition, animated} from 'react-spring'
 
@@ -11,8 +11,12 @@
         leave: { opacity: 0, transform: 'translateX(-100%)' },
     })
 
+    const ref = useRef();
+
+    useOnClickOutside(ref, () => setMenuOpen(false));
+
     return (
-        <div className={"nav-menu"}>
+        <div className={"nav-menu"} >
             {
                 menuTransitions.map(({ item, key, props }) =>
                     item &&
@@ -22,20 +26,16 @@
                         className="fixed bg-white top-0 left-0 w-4/5 h-full z-50 shadow p-3"
                     >
                         {/*<NavigationMenu*/}
-                        {/*    closeMenu={() => setShowMenu(false)}*/}
+                        {/*    onClick={() => setMenuOpen(false)}*/}
                         {/*/>*/}
-                        <div className={"navMenu"}>
-                            World
+                        <div className={"navMenu"} ref={ref}>
+                            Hello World!
                         </div>
 
                     </animated.div>
                 )
             }
 
-
-
-
-
             <button className={"nav-button"} type={"button"} onClick={()=>setMenuOpen(!isMenuOpen)}>
                 <Menu/>
             </button>
@@ -46,4 +46,35 @@
         </div>
     );
 }
+
+// Hook
+function useOnClickOutside(ref, handler) {
+    useEffect(
+        () => {
+            const listener = event => {
+                // Do nothing if clicking ref's element or descendent elements
+                if (!ref.current || ref.current.contains(event.target)) {
+                    return;
+                }
+
+                handler(event);
+            };
+
+            document.addEventListener('mousedown', listener);
+            document.addEventListener('touchstart', listener);
+
+            return () => {
+                document.removeEventListener('mousedown', listener);
+                document.removeEventListener('touchstart', listener);
+            };
+        },
+        // Add ref and handler to effect dependencies
+        // It's worth noting that because passed in handler is a new ...
+        // ... function on every render that will cause this effect ...
+        // ... callback/cleanup to run every render. It's not a big deal ...
+        // ... but to optimize you can wrap handler in useCallback before ...
+        // ... passing it into this hook.
+        [ref, handler]
+    );
+}
 export default NavMenu;
\ No newline at end of file
